[build-system]
requires = ["setuptools>=40.8.0", "wheel"]
build-backend = "setuptools.build_meta:__legacy__"

[tool.ruff]
lint.select = ["E", "F", "W", "I", "N", "UP"]

line-length = 110

# The lowest supported version
target-version = "py310"

# GitLab CI code quality report
output-format = "grouped" 

[tool.ruff.lint.pep8-naming]
ignore-names = [
    "i",
    "j",
    "k",
    "ex",
    "Run",
    "_",
    "up",
    "x",
    "y",
    "z",
    # These are used in Bayes filters and are in line with common notation
    # of state-space models and tracking
    "P",
    "Q",
    "R",
    "X",
    "Y",
    "G",
    "F",
    "B",
    "H",
    "S",
    "K",
]

[tool.pytest.ini_options]
addopts = "-v --color=yes --cov=promis --doctest-modules"
testpaths = [
    # for the doctests:
    "promis",
    # for the actual tests:
    "tests"
]
doctest_optionflags = [
    "IGNORE_EXCEPTION_DETAIL",
    "DONT_ACCEPT_TRUE_FOR_1"
]
filterwarnings = [
    "error",
    "error::PendingDeprecationWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
concurrency = ["multiprocessing"]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Regexes for lines to exclude from consideration

    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
]
